apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: xihe-test-v2
data:
  default.conf: |
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }

    server {
      # listen 443 ssl;
      # server_name localhost;
      # charset utf-8;

      listen 8080;
      server_name localhost;
      charset utf-8;
      limit_conn perserver 50;
      if ($request_method = 'OPTIONS') {
        return 401;
      }

      location / {
        location /assets {
          # publish every two weeks
          expires 14d;
          add_header Cache-Control public;
        }
        location / {
          add_header Cache-Control no-cache;
          proxy_set_header Host $host;
          try_files $uri /index.html;
        }

        root /usr/share/nginx/html;
        index /index.html;
        proxy_set_header Host $host;
        #   error_page 404 /404.html;
      }

      location ^~ /server/ {
        proxy_pass http://xihe-backend-service.xihe-test-v2.svc.cluster.local/api/v1/ ;
        proxy_read_timeout 3600s;
        proxy_connect_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
      }

      location ^~ /api/ {
        proxy_pass http://xihe-backend-service.xihe-test-v2.svc.cluster.local ;
      }

      location ^~ /repo/ {
        proxy_pass https://gitlab.openeuler.sh/api/v4/ ;
      }

      error_page 500 501 502 503 504 505 /500.html;
      error_page 401 /401.html;
      error_page 404 /404.html;

      location = /401.html {
        root /usr/share/nginx/html;
      }

      location = /404.html {
        root /usr/share/nginx/html;
      }

      location = /500.html {
        root /usr/share/nginx/html;
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: server-configmap
  namespace: xihe-test-v2
data:
  config.yaml: |
    authing:
      app_id: "${AUTHING_APP_ID}"
      secret: "${AUTHING_SECRET}"
      redirect_uri: "${AUTHING_REDIRECT_URI_TEST}"

    mongodb:
      db_conn: "${MONGODB_CONNECTION}"
      db_name: "${MONGODB_NAME}"
      collections:
        project: project
        model: model
        dataset: dataset 
        user: user
        login: login
        like: like
        activity: activity
        tag: tag
        luojia: luojia
        training: training
        evaluate: evaluate
        inference: inference
        competition: competition

    gitlab:
      endpoint: "${GITLAB_ENDPOINT}"
      graphql_endpoint: "${GITLAB_GRAPHQL_ENDPOINT}"
      root_token: "${GITLAB_TOKEN}"
      default_branch: main
      lfs_path: gitlab-lfs
      download_expiry: 3600
      obs:
        endpoint: "${HW_OBS_ENDPOINT}"
        access_key: "${HW_OBS_AK}"
        secret_key: "${HW_OBS_SK}"
        bucket: "${HW_OBS_BUCKET}"

    api:
      token_key: "${API_TOKEN_KEY}"
      token_expiry: 3600
      encryption_key: "${ENCRYPTION_KEY}"
      default_password: "${DEFAULT_PASSWORD}"
      max_training_record_num: 5
      tags:
        dataset:
        - app
        - other

        model:
        - app
        - computer
        - file_format
        - framework
        - other

        project:
        - app
        - training_platform
        - other

        global_model:
        - app
        - computer
        - file_format
        - framework

        global_project:
        - app
        - training_platform

        global_dataset:
        - app

    bigmodel:
      cloud:
        user: "${BIGMODEL_USER}"
        password: "${BIGMODEL_PASSWORD}"
        project: "${BIGMODEL_PROJECT}"
        auth_endpoint: "${BIGMODEL_AUTH_ENDPOINT}"

      endpoints:
        vqa: "${BIGMODEL_VQA}"
        pangu: "${BIGMODEL_PANGU}"
        luojia: "${BIGMODEL_LUOJIA}"
        codegeex: "${BIGMODEL_CODEGEEX}"
        desc_picture: "${BIGMODEL_DESCRIBE_PICTURE}"
        signle_picture: "${BIGMODEL_SINGLE_PICTURE}"
        multiple_pictures: "${BIGMODEL_MULTI_PICTURES}"

      obs:
        endpoint: "${VQA_OBS_ENDPOINT}"
        access_key: "${VQA_OBS_ACCESS_KEY}"
        secret_key: "${VQA_OBS_SECRET_KEY}"
        vqa_bucket: "${VQA_OBS_BUCKET}"
        luo_jia_bucket: "${LUOJIA_OBS_BUCKET}"

    domain:
      min_name_length: 3
      covers:
      - "1"
      - "2"
      - "3"
      - "4"

      protocols:
      - "apache 2.0"
      - "mit"

      project_type:
      - "Gradio"
      - "Static"

      training_platform:
      - "ModelArts"

    mq:
      address: "${KAFKA_ADDRESS}"
      topics:
        fork: "xihe_fork_test"
        like: "xihe_like_test"
        evaluate: "xihe_evaluate_test"
        training: "xihe_training_test"
        inference: "xihe_inference_test"
        following: "xihe_following_test"
        related_resource: "xihe_related_resource_test"

    training:
      job_done_status:
      - "Failed"
      - "Abnormal"
      - "Completed"
      - "Terminated"
